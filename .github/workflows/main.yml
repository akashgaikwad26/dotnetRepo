name: FxCop Analysis for C# Code Quality

on:
  push:
    paths:
      - '**/*.cs'
  pull_request:
    paths:
      - '**/*.cs'
  workflow_dispatch:
    inputs:
      custom_username:
        description: 'Enter custom username (default is "default-user")'
        required: false
        default: 'default-user'
      project_id:
        description: 'Enter project ID (default is "default-project")'
        required: false
        default: 'default-project'

jobs:
  analyze:
    name: Run FxCop Analysis and Generate Report
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x' # Use .NET 8 or 7 for latest projects

    - name: Restore Dependencies
      run: |
        PROJECT=$(find . -name "*.csproj" | head -n 1)
        dotnet restore "$PROJECT"

    - name: Install FxCop Analyzers
      run: |
        PROJECT=$(find . -name "*.csproj" | head -n 1)
        dotnet add "$PROJECT" package Microsoft.CodeAnalysis.FxCopAnalyzers

    - name: Build Project and Analyze with FxCop
      run: |
        PROJECT=$(find . -name "*.csproj" | head -n 1)
        dotnet build "$PROJECT" -warnaserror --configuration Release --no-restore || true # Allow build to fail but continue

    - name: Extract FxCop Violations
      id: violations
      run: |
        PROJECT=$(find . -name "*.csproj" | head -n 1)
        # Capture FxCop violations (CA[0-9]{4} pattern)
        FXCOP_WARNINGS=$(dotnet build "$PROJECT" -warnaserror --configuration Release --no-restore | grep -E "(CA[0-9]{4})" | wc -l)
        echo "FxCop Violations: $FXCOP_WARNINGS"
        echo "fxcop_violations=$FXCOP_WARNINGS" >> $GITHUB_ENV
        if [ "$FXCOP_WARNINGS" -gt 0 ]; then
          echo "There are $FXCOP_WARNINGS FxCop violations. Please check the details."
        fi

    - name: Save Report to docs/ Folder
      run: |
        USERNAME="${{ github.event.inputs.custom_username || 'default-user' }}"
        PROJECT_ID="${{ github.event.inputs.project_id || 'default-project' }}"
        DOCS_FOLDER="docs/${USERNAME}/${PROJECT_ID}/code_quality"
        mkdir -p "$DOCS_FOLDER"
        mv build-output.txt "$DOCS_FOLDER/"

    - name: Upload Report Artifact
      uses: actions/upload-artifact@v4
      with:
        name: fxcop-report
        path: docs/${{ github.event.inputs.custom_username || 'default-user' }}/**/build-output.txt
